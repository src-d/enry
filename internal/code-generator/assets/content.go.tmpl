package data

import "regexp"

var ContentHeuristics = map[string]*Heuristics{
	{{ range $ext, $rules := . -}}
		{{ printf "%q" $ext }}: &Heuristics{
			{{ range $rule := $rules -}}
				{{template "Rule" $rule}}
			{{ end -}}
		},
	{{ end -}}
}

{{ define "Rule" -}}
	{{ if eq .Op "And" -}}
		&AndRule {
			{{ template "Languages" .Langs -}}
			[]Matcher{
				{{ range $rule := .Rules -}}
					{{template "Rule" $rule}}
				{{ end -}}
			},
		},
	{{- else if eq .Op "Or" -}}
		&OrRule{
			{{ template "Languages" .Langs -}}
			regexp.MustCompile(`{{ .Pattern }}`),
		},
	{{- else if eq .Op "Not" -}}
		&NotRule{
			{{ template "Languages" .Langs -}}
			[]*regexp.Regexp{regexp.MustCompile(`{{ .Pattern }}`)},
		},
	{{- else if eq .Op "Always" -}}
		&AlwaysRule{
			{{ template "Languages" .Langs -}}
		},
	{{ end -}}
{{ end -}}


{{define "Languages" -}}
	{{with . -}}
		&Languages{[]string{ {{range .}} {{printf "\"%s\"" .}}, {{end}} }},
	{{ else -}}
		nil,
	{{end -}}
{{end}}
